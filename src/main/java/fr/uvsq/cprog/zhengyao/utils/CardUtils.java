package fr.uvsq.cprog.zhengyao.utils;

import fr.uvsq.cprog.zhengyao.model.Carte;
import java.util.List;

/**
 * Utility class for card-related operations.
 */
public class CardUtils {

    /**
     * Formate les cartes d'un joueur en une cha√Æne de caract√®res.
     *
     * @param playerId L'identifiant du joueur (ex: "JV1").
     * @param cards    La liste des cartes sous forme de cha√Ænes (ex: "K(SHD)", "8(DC)").
     *
     * @return Une cha√Æne format√©e repr√©sentant les actions du joueur.
     */
    public static String formatPlayerCards(String playerId, List<String> cards) {
        return playerId + ": " + String.join(", ", cards);
    }

    /**
     * Convertit une liste de cartes en une cha√Æne de symboles Unicode.
     *
     * @param cards La liste des cartes.
     *
     * @return Une cha√Æne contenant les symboles Unicode des cartes.
     */
    public static String toUnicodeSymbols(List<Carte> cards) {
        StringBuilder sb = new StringBuilder();
        for (Carte card : cards) {
            sb.append(getUnicodeSymbol(card)).append(", ");
        }
        return sb.length() > 0 ? sb.substring(0, sb.length() - 2) : ""; // Retirer la derni√®re virgule
    }

    /**
     * Retourne le symbole Unicode correspondant √† une carte.
     *
     * @param card La carte.
     *
     * @return Le symbole Unicode de la carte.
     */
    public static String getUnicodeSymbol(Carte card) {
        String unicodeSymbol = switch (card.getValeur()) {
          case AS -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ°";
            case COEUR -> "üÇ±";
            case CARREAU -> "üÉÅ";
            case TREFLE -> "üÉë";
          };
          case ROI -> switch (card.getCouleur()) {
            case PIQUE -> "üÇÆ";
            case COEUR -> "üÇæ";
            case CARREAU -> "üÉé";
            case TREFLE -> "üÉû";
          };
          case DAME -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ≠";
            case COEUR -> "üÇΩ";
            case CARREAU -> "üÉç";
            case TREFLE -> "üÉù";
          };
          case VALET -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ´";
            case COEUR -> "üÇª";
            case CARREAU -> "üÉã";
            case TREFLE -> "üÉõ";
          };
          case DIX -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ™";
            case COEUR -> "üÇ∫";
            case CARREAU -> "üÉä";
            case TREFLE -> "üÉö";
          };
          case NEUF -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ©";
            case COEUR -> "üÇπ";
            case CARREAU -> "üÉâ";
            case TREFLE -> "üÉô";
          };
          case HUIT -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ®";
            case COEUR -> "üÇ∏";
            case CARREAU -> "üÉà";
            case TREFLE -> "üÉò";
          };
          case SEPT -> switch (card.getCouleur()) {
            case PIQUE -> "üÇß";
            case COEUR -> "üÇ∑";
            case CARREAU -> "üÉá";
            case TREFLE -> "üÉó";
          };
          case SIX -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ¶";
            case COEUR -> "üÇ∂";
            case CARREAU -> "üÉÜ";
            case TREFLE -> "üÉñ";
          };
          case CINQ -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ•";
            case COEUR -> "üÇµ";
            case CARREAU -> "üÉÖ";
            case TREFLE -> "üÉï";
          };
          case QUATRE -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ§";
            case COEUR -> "üÇ¥";
            case CARREAU -> "üÉÑ";
            case TREFLE -> "üÉî";
          };
          case TROIS -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ£";
            case COEUR -> "üÇ≥";
            case CARREAU -> "üÉÉ";
            case TREFLE -> "üÉì";
          };
          case DEUX -> switch (card.getCouleur()) {
            case PIQUE -> "üÇ¢";
            case COEUR -> "üÇ≤";
            case CARREAU -> "üÉÇ";
            case TREFLE -> "üÉí";
          };
        };
        return unicodeSymbol;
    }
}
